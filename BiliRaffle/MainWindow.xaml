<Window x:Class="BiliRaffle.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:BiliRaffle"
        mc:Ignorable="d"
        Title="互动抽奖工具" Height="450" Width="740" ResizeMode="NoResize" WindowStyle="None" x:Name="window" WindowStartupLocation="CenterScreen" Loaded="window_Loaded">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/BiliRaffle;component/WindowBaseStyle.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <local:IsEqualConverter x:Key="IsEqualConverter" />
            <local:IsNullOrEmptyConverter x:Key="IsNullOrEmptyConverter" />
        </ResourceDictionary>
    </Window.Resources>
    <Window.DataContext>
        <local:ViewModel />
    </Window.DataContext>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="411" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" Background="#02FFFFFF" MouseDown="Grid_MouseDown">
            <Grid.DataContext>
                <local:WindowBaseCommand />
            </Grid.DataContext>
            <TextBlock x:Name="Lbl_Title" Text="互动抽奖工具" HorizontalAlignment="Left" Margin="10,10,0,12.4" VerticalAlignment="Center" FontSize="18" FontWeight="Bold" />
            <Button x:Name="Btn_MinSize" Command="{Binding MinSize}" CommandParameter="{Binding ElementName=window, Mode=OneWay}" Style="{StaticResource MinSizeBtn}" />
            <Button x:Name="Btn_Close" Command="{Binding Close}" CommandParameter="{Binding ElementName=window, Mode=OneWay}" Style="{StaticResource CloseBtn}" />
            <Rectangle x:Name="rectangle" Fill="#FFD4D4D4" Height="1" Margin="0,38,0,0" VerticalAlignment="Top" />
        </Grid>
        <TextBlock x:Name="Lbl_Url" Text="抽奖地址：" HorizontalAlignment="Left" Margin="30,21,0,0" Grid.Row="1" FontSize="14" Height="20" VerticalAlignment="Top" />
        <TextBlock x:Name="TBk_Url_Message" Margin="110,25,320,280" Grid.Row="1" Foreground="#FF8F8F8F">
            输入支持的url：(多抽一以回车分隔)<LineBreak />
            http[s]://t.bilibili.com/<LineBreak />
            http[s]://h.bilibili.com/<LineBreak />
            http[s]://www.bilibili.com/video/<LineBreak />
            http[s]://www.bilibili.com/read/<LineBreak />
            http[s]://www.bilibili.com/audio/<LineBreak />
            http[s]://www.bilibili.com/opus/<LineBreak />
            <TextBlock.Style>
                <Style TargetType="TextBlock">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Text, Converter={StaticResource IsNullOrEmptyConverter}, ElementName=TB_Url}" Value="True">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Text, Converter={StaticResource IsNullOrEmptyConverter}, ElementName=TB_Url}" Value="False">
                            <Setter Property="Visibility" Value="Hidden" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
        <TextBox x:Name="TB_Url" Margin="105,20,315,0" Height="116" VerticalAlignment="Top" Grid.Row="1" Text="{Binding Main.Url}" TextChanged="TB_Url_TextChanged" VerticalScrollBarVisibility="Auto" AcceptsReturn="True" Background="{x:Null}" Padding="4" BorderBrush="#FF818181" />
        <TextBlock x:Name="Lbl_Num" Text="中奖人数：" HorizontalAlignment="Left" Margin="30,158,0,0" Grid.Row="1" FontSize="14" Height="20" VerticalAlignment="Top" RenderTransformOrigin="0.5,2.95" />
        <TextBox x:Name="TB_Msg" Margin="480,20,30,20" FontSize="14" Grid.Row="1" Text="{Binding Main.Msg}" VerticalScrollBarVisibility="Auto" AcceptsReturn="True" Background="{x:Null}" IsReadOnly="True" TextWrapping="Wrap" />
        <Button x:Name="Btn_Num_1" Content="1" HorizontalAlignment="Left" Margin="105,150,0,0" Grid.Row="1" VerticalAlignment="Top" Width="35" Height="35" Command="{Binding Main.ChangeNum}" CommandParameter="{Binding Content, RelativeSource={RelativeSource Self}}">
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#02FFFFFF" />
                    <Setter Property="BorderBrush" Value="#FF818181" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" SnapsToDevicePixels="True" CornerRadius="5">
                                    <TextBlock Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center" />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Main.Num, Converter={StaticResource IsEqualConverter},ConverterParameter=1,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Value="True">
                            <Setter Property="Background" Value="#FF4FBDEA" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Main.Num, Converter={StaticResource IsEqualConverter},ConverterParameter=1,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Value="False">
                            <Setter Property="Background" Value="#02FFFFFF" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <Button x:Name="Btn_Num_3" Content="3" HorizontalAlignment="Left" Margin="145,150,0,0" Grid.Row="1" VerticalAlignment="Top" Width="35" Height="35" Command="{Binding Main.ChangeNum}" CommandParameter="{Binding Content, RelativeSource={RelativeSource Self}}">
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#02FFFFFF" />
                    <Setter Property="BorderBrush" Value="#FF818181" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" SnapsToDevicePixels="True" CornerRadius="5">
                                    <TextBlock Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center" />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Main.Num, Converter={StaticResource IsEqualConverter},ConverterParameter=3,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Value="True">
                            <Setter Property="Background" Value="#FF4FBDEA" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Main.Num, Converter={StaticResource IsEqualConverter},ConverterParameter=3,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Value="False">
                            <Setter Property="Background" Value="#02FFFFFF" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <Button x:Name="Btn_Num_5" Content="5" HorizontalAlignment="Left" Margin="185,150,0,0" Grid.Row="1" VerticalAlignment="Top" Width="35" Height="35" Command="{Binding Main.ChangeNum}" CommandParameter="{Binding Content, RelativeSource={RelativeSource Self}}">
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#02FFFFFF" />
                    <Setter Property="BorderBrush" Value="#FF818181" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" SnapsToDevicePixels="True" CornerRadius="5">
                                    <TextBlock Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center" />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Main.Num, Converter={StaticResource IsEqualConverter},ConverterParameter=5,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Value="True">
                            <Setter Property="Background" Value="#FF4FBDEA" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Main.Num, Converter={StaticResource IsEqualConverter},ConverterParameter=5,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Value="False">
                            <Setter Property="Background" Value="#02FFFFFF" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <Button x:Name="Btn_Num_10" Content="10" HorizontalAlignment="Left" Margin="225,150,0,0" Grid.Row="1" VerticalAlignment="Top" Width="35" Height="35" Command="{Binding Main.ChangeNum}"  CommandParameter="{Binding Content, RelativeSource={RelativeSource Self}}">
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#02FFFFFF" />
                    <Setter Property="BorderBrush" Value="#FF818181" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" SnapsToDevicePixels="True" CornerRadius="5">
                                    <TextBlock Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center" />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Main.Num, Converter={StaticResource IsEqualConverter},ConverterParameter=10,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Value="True">
                            <Setter Property="Background" Value="#FF4FBDEA" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Main.Num, Converter={StaticResource IsEqualConverter},ConverterParameter=10,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Value="False">
                            <Setter Property="Background" Value="#02FFFFFF" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <TextBlock x:Name="TBk_Num_x_Msg" HorizontalAlignment="Left" Height="25" Margin="265,155,0,0" Grid.Row="1" TextWrapping="Wrap" Text="其他" VerticalAlignment="Top" Width="55" Foreground="#FF8F8F8F" TextAlignment="Center" Padding="0,5,0,0">
            <TextBlock.Style>
                <Style TargetType="TextBlock">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Text, Converter={StaticResource IsEqualConverter},ConverterParameter=-1, ElementName=TB_Num_x}" Value="True">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Text, Converter={StaticResource IsEqualConverter},ConverterParameter=-1, ElementName=TB_Num_x}" Value="False">
                            <Setter Property="Visibility" Value="Hidden" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
        <TextBox x:Name="TB_Num_x" Margin="265,150,420,226" Grid.Row="1" Text="{Binding Main.Num, Mode=OneWayToSource,UpdateSourceTrigger=PropertyChanged,FallbackValue=-1}" PreviewTextInput="TB_Num_x_PreviewTextInput" GotFocus="TB_Num_x_GotFocus" LostFocus="TB_Num_x_LostFocus">
            <TextBox.Style>
                <Style TargetType="TextBox">
                    <Setter Property="Background" Value="#02FFFFFF" />
                    <Setter Property="BorderBrush" Value="#FF818181" />
                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                    <Setter Property="VerticalContentAlignment" Value="Center" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="TextBox">
                                <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"  SnapsToDevicePixels="True" CornerRadius="5">
                                    <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Margin="5" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="Background" Value="#FF4FBDEA" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Text, Converter={StaticResource IsEqualConverter},ConverterParameter=-1, ElementName=TB_Num_x}" Value="True">
                            <Setter Property="Foreground" Value="{x:Null}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Text, Converter={StaticResource IsEqualConverter},ConverterParameter=-1, ElementName=TB_Num_x}" Value="False">
                            <Setter Property="Foreground" Value="#FF000000" />
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Main.Num, ConverterParameter=1, Converter={StaticResource IsEqualConverter},UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Value="False" />
                                <Condition Binding="{Binding Main.Num, ConverterParameter=3, Converter={StaticResource IsEqualConverter},UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Value="False" />
                                <Condition Binding="{Binding Main.Num, ConverterParameter=5, Converter={StaticResource IsEqualConverter},UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Value="False" />
                                <Condition Binding="{Binding Main.Num, ConverterParameter=10, Converter={StaticResource IsEqualConverter},UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Background" Value="#FF4FBDEA" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>
        <TextBlock x:Name="Lbl_Condition" Text="抽奖条件：" HorizontalAlignment="Left" Margin="30,201,0,0" Grid.Row="1" FontSize="14" Height="20" VerticalAlignment="Top" RenderTransformOrigin="0.5,2.95" />
        <CheckBox x:Name="CB_Condition_Repose" Grid.Row="1" Margin="105,192,560,184" IsChecked="{Binding Main.IsReposeEnabled}" ToolTipService.InitialShowDelay="100" Content="转发">
            <CheckBox.Style>
                <Style TargetType="{x:Type CheckBox}">
                    <Setter Property="BorderBrush" Value="#FF818181" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type CheckBox}">
                                <Border CornerRadius="5" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                                    <TextBlock x:Name="label" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{TemplateBinding Content}" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsChecked" Value="True" />
                                            <Condition Property="IsEnabled" Value="True" />
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" Value="#FF4FBDEA" />
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsChecked" Value="False" />
                                            <Condition Property="IsEnabled" Value="True" />
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" Value="#02FFFFFF" />
                                    </MultiTrigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Background" Value="LightGray" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </CheckBox.Style>
            <CheckBox.ToolTip>
                <ToolTip Background="White">
                    受B站接口限制，只能获取到大约500个最近转发的用户。扫码登录可缩短信息获取时间。
                </ToolTip>
            </CheckBox.ToolTip>
        </CheckBox>
        <CheckBox x:Name="CB_Condition_Comment" Grid.Row="1" Margin="185,192,480,184" IsChecked="{Binding Main.IsCommentEnabled}" Content="评论" Click="CB_Condition_Comment_Click">
            <CheckBox.Style>
                <Style TargetType="{x:Type CheckBox}">
                    <Setter Property="BorderBrush" Value="#FF818181" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type CheckBox}">
                                <Border CornerRadius="5" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                                    <TextBlock x:Name="label" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{TemplateBinding Content}" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsChecked" Value="True" />
                                            <Condition Property="IsEnabled" Value="True" />
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" Value="#FF4FBDEA" />
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsChecked" Value="False" />
                                            <Condition Property="IsEnabled" Value="True" />
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" Value="#02FFFFFF" />
                                    </MultiTrigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Background" Value="LightGray" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </CheckBox.Style>
        </CheckBox>
        <TextBlock x:Name="Lbl_RepliesInFloors" HorizontalAlignment="Left" Margin="265,199,0,0" Grid.Row="1" Height="28" VerticalAlignment="Top" RenderTransformOrigin="0.5,2.95" Width="70" Padding="2,2,0,0" FontSize="12" Text="评论楼中楼：" />
        <CheckBox x:Name="CB_RepliesInFloors" Grid.Row="1" Margin="340,192,325,184" IsChecked="{Binding Main.IsRepliesInFloors}" IsEnabled="{Binding Main.IsCommentEnabled}">
            <CheckBox.Style>
                <Style TargetType="{x:Type CheckBox}">
                    <Setter Property="BorderBrush" Value="#FF818181" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type CheckBox}">
                                <Border CornerRadius="5" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                                    <TextBlock x:Name="label" HorizontalAlignment="Center" VerticalAlignment="Center" Text="关" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsChecked" Value="True" />
                                            <Condition Property="IsEnabled" Value="True" />
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" Value="#FF4FBDEA" />
                                        <Setter TargetName="label" Property="Text" Value="开" />
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsChecked" Value="False" />
                                            <Condition Property="IsEnabled" Value="True" />
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" Value="#02FFFFFF" />
                                        <Setter TargetName="label" Property="Text" Value="关" />
                                    </MultiTrigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Background" Value="LightGray" />
                                        <Setter TargetName="label" Property="Text" Value="关" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </CheckBox.Style>
        </CheckBox>
        <TextBlock x:Name="Lbl_Fans" HorizontalAlignment="Left" Margin="221,244,0,0" Grid.Row="1" Height="35" VerticalAlignment="Top" RenderTransformOrigin="0.5,2.95" Width="114" Padding="2,2,0,0">
            需要关注(需要登录)：
        </TextBlock>
        <CheckBox x:Name="CB_NeedFans" Grid.Row="1" Margin="340,236,325,140" IsChecked="{Binding Main.CheckFollow}">
            <CheckBox.Style>
                <Style TargetType="CheckBox">
                    <Setter Property="BorderBrush" Value="#FF818181" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="CheckBox">
                                <Border CornerRadius="5" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                                    <TextBlock x:Name="label" HorizontalAlignment="Center" VerticalAlignment="Center" Text="关" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Background" Value="#FF4FBDEA" />
                                        <Setter TargetName="label" Property="Text" Value="开" />
                                    </Trigger>
                                    <Trigger Property="IsChecked" Value="False">
                                        <Setter Property="Background" Value="#02FFFFFF" />
                                        <Setter TargetName="label" Property="Text" Value="关" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </CheckBox.Style>
        </CheckBox>
        <TextBlock x:Name="Lbl_OneChance" Text="重复不计：" HorizontalAlignment="Left" Margin="30,244,0,0" Grid.Row="1" FontSize="14" Height="20" VerticalAlignment="Top" RenderTransformOrigin="0.5,2.95" />
        <CheckBox x:Name="CB_OneChance" Grid.Row="1" Margin="105,236,560,140" IsChecked="{Binding Main.IsOneChance}">
            <CheckBox.Style>
                <Style TargetType="{x:Type CheckBox}">
                    <Setter Property="BorderBrush" Value="#FF818181" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type CheckBox}">
                                <Border CornerRadius="5" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                                    <TextBlock x:Name="label" HorizontalAlignment="Center" VerticalAlignment="Center" Text="关" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Background" Value="#FF4FBDEA" />
                                        <Setter TargetName="label" Property="Text" Value="开" />
                                    </Trigger>
                                    <Trigger Property="IsChecked" Value="False">
                                        <Setter Property="Background" Value="#02FFFFFF" />
                                        <Setter TargetName="label" Property="Text" Value="关" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </CheckBox.Style>
        </CheckBox>
        <TextBlock x:Name="Lbl_Filter" Text="过滤抽奖号(需要登录)：" HorizontalAlignment="Left" Margin="30,284,0,0" Grid.Row="1" Height="40" Width="75" VerticalAlignment="Top" RenderTransformOrigin="0.5,2.95" TextWrapping="Wrap"/>
        <CheckBox x:Name="CB_Filter" Grid.Row="1" Margin="105,282,560,94" IsChecked="{Binding Main.Filter}">
            <CheckBox.Style>
                <Style TargetType="{x:Type CheckBox}">
                    <Setter Property="BorderBrush" Value="#FF818181" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type CheckBox}">
                                <Border CornerRadius="5" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                                    <TextBlock x:Name="label" HorizontalAlignment="Center" VerticalAlignment="Center" Text="关" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Background" Value="#FF4FBDEA" />
                                        <Setter TargetName="label" Property="Text" Value="开" />
                                    </Trigger>
                                    <Trigger Property="IsChecked" Value="False">
                                        <Setter Property="Background" Value="#02FFFFFF" />
                                        <Setter TargetName="label" Property="Text" Value="关" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </CheckBox.Style>
        </CheckBox>
        <TextBlock x:Name="Lbl_Filter_Condition" Text="抽奖指数阈值（1~10）：" HorizontalAlignment="Left" Margin="200,290,0,0" Grid.Row="1" Height="20" VerticalAlignment="Top" RenderTransformOrigin="0.5,2.95" Width="135" Visibility="{Binding Filter, Converter={StaticResource BooleanToVisibilityConverter}}" />
        <TextBox x:Name="TB_Filter_Condition" Margin="340,282,325,0" Height="35" VerticalAlignment="Top" Grid.Row="1" Text="{Binding Main.FilterCondition}" VerticalScrollBarVisibility="Auto" Background="{x:Null}" Padding="0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" BorderBrush="#FF818181" Visibility="{Binding Filter, Converter={StaticResource BooleanToVisibilityConverter}}" />
        <Button x:Name="Btn_Start" Content="开始抽奖" HorizontalAlignment="Left" Margin="145,355,0,0" Grid.Row="1" VerticalAlignment="Top" Width="161" Height="35" Command="{Binding Main.Start}">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="#02FFFFFF" />
                    <Setter Property="BorderBrush" Value="#FF818181" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" SnapsToDevicePixels="True" CornerRadius="5">
                                    <TextBlock Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center" />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Background" Value="#02FFFFFF" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FF4FBDEA" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
    </Grid>
</Window>